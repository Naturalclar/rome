Program {
  comments: Array []
  diagnostics: Array []
  directives: Array []
  filename: '..'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'script'
  syntax: Array []
  loc: Object {
    filename: '..'
    end: Object {
      column: 0
      index: 24
      line: 2
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  body: Array [
    FunctionDeclaration {
      id: BindingIdentifier {
        name: 'foo'
        loc: Object {
          filename: '..'
          end: Object {
            column: 12
            index: 12
            line: 1
          }
          start: Object {
            column: 9
            index: 9
            line: 1
          }
        }
      }
      loc: Object {
        filename: '..'
        end: Object {
          column: 17
          index: 17
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      body: BlockStatement {
        body: Array []
        directives: Array []
        loc: Object {
          filename: '..'
          end: Object {
            column: 17
            index: 17
            line: 1
          }
          start: Object {
            column: 15
            index: 15
            line: 1
          }
        }
      }
      head: FunctionHead {
        async: false
        generator: false
        hasHoistedVars: false
        params: Array []
        predicate: undefined
        rest: undefined
        returnType: undefined
        thisType: undefined
        typeParameters: undefined
        loc: Object {
          filename: '..'
          end: Object {
            column: 15
            index: 15
            line: 1
          }
          start: Object {
            column: 0
            index: 0
            line: 1
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 23
          index: 23
          line: 1
        }
        start: Object {
          column: 18
          index: 18
          line: 1
        }
      }
      expression: RegExpLiteral {
        global: false
        insensitive: true
        multiline: false
        noDotNewline: false
        pattern: '42'
        sticky: false
        unicode: false
        loc: Object {
          filename: '..'
          end: Object {
            column: 23
            index: 23
            line: 1
          }
          start: Object {
            column: 18
            index: 18
            line: 1
          }
        }
      }
    }
  ]
}