Program {
  comments: Array []
  diagnostics: Array []
  directives: Array []
  filename: '..'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'script'
  syntax: Array []
  loc: Object {
    filename: '..'
    end: Object {
      column: 7
      index: 30
      line: 2
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  body: Array [
    SwitchStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 7
          index: 30
          line: 2
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      discriminant: ReferenceIdentifier {
        name: 'a'
        loc: Object {
          filename: '..'
          end: Object {
            column: 8
            index: 8
            line: 1
          }
          start: Object {
            column: 7
            index: 7
            line: 1
          }
        }
      }
      cases: Array [
        SwitchCase {
          loc: Object {
            filename: '..'
            end: Object {
              column: 5
              index: 28
              line: 2
            }
            start: Object {
              column: 18
              index: 18
              line: 1
            }
          }
          test: NumericLiteral {
            value: 1
            loc: Object {
              filename: '..'
              end: Object {
                column: 18
                index: 18
                line: 1
              }
              start: Object {
                column: 17
                index: 17
                line: 1
              }
            }
          }
          consequent: Array [
            BlockStatement {
              body: Array []
              directives: Array []
              loc: Object {
                filename: '..'
                end: Object {
                  column: 22
                  index: 22
                  line: 1
                }
                start: Object {
                  column: 20
                  index: 20
                  line: 1
                }
              }
            }
            ExpressionStatement {
              loc: Object {
                filename: '..'
                end: Object {
                  column: 5
                  index: 28
                  line: 2
                }
                start: Object {
                  column: 0
                  index: 23
                  line: 2
                }
              }
              expression: RegExpLiteral {
                global: false
                insensitive: false
                multiline: false
                noDotNewline: false
                pattern: 'foo'
                sticky: false
                unicode: false
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 5
                    index: 28
                    line: 2
                  }
                  start: Object {
                    column: 0
                    index: 23
                    line: 2
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ]
}