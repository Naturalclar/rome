Program {
  diagnostics: Array []
  directives: Array []
  filename: '..'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'script'
  syntax: Array []
  loc: Object {
    filename: '..'
    end: Object {
      column: 0
      index: 52
      line: 7
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  comments: Array [
    CommentLine {
      value: ' one'
      loc: Object {
        filename: '..'
        end: Object {
          column: 11
          index: 29
          line: 2
        }
        start: Object {
          column: 11
          index: 29
          line: 2
        }
      }
    }
    CommentLine {
      value: ' two'
      loc: Object {
        filename: '..'
        end: Object {
          column: 0
          index: 40
          line: 4
        }
        start: Object {
          column: 0
          index: 40
          line: 4
        }
      }
    }
  ]
  body: Array [
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 2
          index: 51
          line: 6
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      expression: CallExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 1
            index: 50
            line: 6
          }
          start: Object {
            column: 0
            index: 0
            line: 1
          }
        }
        callee: ReferenceIdentifier {
          name: 'test'
          loc: Object {
            filename: '..'
            end: Object {
              column: 4
              index: 4
              line: 1
            }
            start: Object {
              column: 0
              index: 0
              line: 1
            }
          }
        }
        arguments: Array [
          FunctionExpression {
            id: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 1
                index: 41
                line: 4
              }
              start: Object {
                column: 5
                index: 5
                line: 1
              }
            }
            head: FunctionHead {
              async: false
              generator: false
              hasHoistedVars: true
              params: Array []
              predicate: undefined
              rest: undefined
              returnType: undefined
              thisType: undefined
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 16
                  index: 16
                  line: 1
                }
                start: Object {
                  column: 5
                  index: 5
                  line: 1
                }
              }
            }
            body: BlockStatement {
              directives: Array []
              loc: Object {
                filename: '..'
                end: Object {
                  column: 1
                  index: 41
                  line: 4
                }
                start: Object {
                  column: 16
                  index: 16
                  line: 1
                }
              }
              body: Array [
                VariableDeclarationStatement {
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 12
                      index: 30
                      line: 2
                    }
                    start: Object {
                      column: 2
                      index: 20
                      line: 2
                    }
                  }
                  declaration: VariableDeclaration {
                    kind: 'var'
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 12
                        index: 30
                        line: 2
                      }
                      start: Object {
                        column: 2
                        index: 20
                        line: 2
                      }
                    }
                    declarations: Array [
                      VariableDeclarator {
                        id: BindingIdentifier {
                          name: 'a'
                          loc: Object {
                            filename: '..'
                            end: Object {
                              column: 7
                              index: 25
                              line: 2
                            }
                            start: Object {
                              column: 6
                              index: 24
                              line: 2
                            }
                          }
                        }
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 11
                            index: 29
                            line: 2
                          }
                          start: Object {
                            column: 6
                            index: 24
                            line: 2
                          }
                        }
                        init: NumericLiteral {
                          value: 1
                          loc: Object {
                            filename: '..'
                            end: Object {
                              column: 11
                              index: 29
                              line: 2
                            }
                            start: Object {
                              column: 10
                              index: 28
                              line: 2
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}