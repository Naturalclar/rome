Program {
  diagnostics: Array []
  directives: Array []
  filename: '..'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'module'
  syntax: Array [
    'jsx'
    'flow'
  ]
  loc: Object {
    filename: '..'
    end: Object {
      column: 0
      index: 168
      line: 6
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  comments: Array [
    CommentLine {
      value: ' This looks A LOT like an async arrow function, but it isn\'t because'
      loc: Object {
        filename: '..'
        end: Object {
          column: 22
          index: 22
          line: 1
        }
        start: Object {
          column: 22
          index: 22
          line: 1
        }
      }
    }
    CommentLine {
      value: ' T + U isn\'t a valid type parameter.'
      loc: Object {
        filename: '..'
        end: Object {
          column: 22
          index: 22
          line: 1
        }
        start: Object {
          column: 22
          index: 22
          line: 1
        }
      }
    }
  ]
  body: Array [
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 23
          index: 23
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      expression: BinaryExpression {
        operator: '>'
        loc: Object {
          filename: '..'
          end: Object {
            column: 22
            index: 22
            line: 1
          }
          start: Object {
            column: 0
            index: 0
            line: 1
          }
        }
        left: BinaryExpression {
          operator: '<'
          loc: Object {
            filename: '..'
            end: Object {
              column: 8
              index: 8
              line: 1
            }
            start: Object {
              column: 0
              index: 0
              line: 1
            }
          }
          left: ReferenceIdentifier {
            name: 'async'
            loc: Object {
              filename: '..'
              end: Object {
                column: 5
                index: 5
                line: 1
              }
              start: Object {
                column: 0
                index: 0
                line: 1
              }
            }
          }
          right: ReferenceIdentifier {
            name: 'T'
            loc: Object {
              filename: '..'
              end: Object {
                column: 8
                index: 8
                line: 1
              }
              start: Object {
                column: 7
                index: 7
                line: 1
              }
            }
          }
        }
        right: FlowTypeCastExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 21
              index: 21
              line: 1
            }
            start: Object {
              column: 10
              index: 10
              line: 1
            }
          }
          expression: ReferenceIdentifier {
            name: 'fn'
            loc: Object {
              filename: '..'
              end: Object {
                column: 12
                index: 12
                line: 1
              }
              start: Object {
                column: 10
                index: 10
                line: 1
              }
            }
          }
          typeAnnotation: FlowFunctionTypeAnnotation {
            params: Array []
            rest: undefined
            typeParameters: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 21
                index: 21
                line: 1
              }
              start: Object {
                column: 14
                index: 14
                line: 1
              }
            }
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'T'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 21
                    index: 21
                    line: 1
                  }
                  start: Object {
                    column: 20
                    index: 20
                    line: 1
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 21
                  index: 21
                  line: 1
                }
                start: Object {
                  column: 20
                  index: 20
                  line: 1
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 32
          index: 167
          line: 5
        }
        start: Object {
          column: 0
          index: 135
          line: 5
        }
      }
      expression: FlowTypeCastExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 30
            index: 165
            line: 5
          }
          start: Object {
            column: 1
            index: 136
            line: 5
          }
        }
        typeAnnotation: FlowFunctionTypeAnnotation {
          loc: Object {
            filename: '..'
            end: Object {
              column: 30
              index: 165
              line: 5
            }
            start: Object {
              column: 23
              index: 158
              line: 5
            }
          }
          returnType: FlowGenericTypeAnnotation {
            id: Identifier {
              name: 'fn'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 30
                  index: 165
                  line: 5
                }
                start: Object {
                  column: 28
                  index: 163
                  line: 5
                }
              }
            }
            typeParameters: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 30
                index: 165
                line: 5
              }
              start: Object {
                column: 28
                index: 163
                line: 5
              }
            }
          }
          params: Array [
            FlowFunctionTypeParam {
              name: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 27
                  index: 162
                  line: 5
                }
                start: Object {
                  column: 23
                  index: 158
                  line: 5
                }
              }
              meta: PatternMeta {
                optional: false
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 27
                    index: 162
                    line: 5
                  }
                  start: Object {
                    column: 23
                    index: 158
                    line: 5
                  }
                }
                typeAnnotation: FlowGenericTypeAnnotation {
                  id: Identifier {
                    name: 'T'
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 24
                        index: 159
                        line: 5
                      }
                      start: Object {
                        column: 23
                        index: 158
                        line: 5
                      }
                    }
                  }
                  typeParameters: undefined
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 24
                      index: 159
                      line: 5
                    }
                    start: Object {
                      column: 23
                      index: 158
                      line: 5
                    }
                  }
                }
              }
            }
          ]
        }
        expression: BinaryExpression {
          operator: '>'
          loc: Object {
            filename: '..'
            end: Object {
              column: 21
              index: 156
              line: 5
            }
            start: Object {
              column: 1
              index: 136
              line: 5
            }
          }
          right: FlowTypeCastExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 20
                index: 155
                line: 5
              }
              start: Object {
                column: 15
                index: 150
                line: 5
              }
            }
            expression: ReferenceIdentifier {
              name: 'fn'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 17
                  index: 152
                  line: 5
                }
                start: Object {
                  column: 15
                  index: 150
                  line: 5
                }
              }
            }
            typeAnnotation: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'T'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 20
                    index: 155
                    line: 5
                  }
                  start: Object {
                    column: 19
                    index: 154
                    line: 5
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 20
                  index: 155
                  line: 5
                }
                start: Object {
                  column: 19
                  index: 154
                  line: 5
                }
              }
            }
          }
          left: BinaryExpression {
            operator: '<'
            loc: Object {
              filename: '..'
              end: Object {
                column: 13
                index: 148
                line: 5
              }
              start: Object {
                column: 1
                index: 136
                line: 5
              }
            }
            left: ReferenceIdentifier {
              name: 'async'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 6
                  index: 141
                  line: 5
                }
                start: Object {
                  column: 1
                  index: 136
                  line: 5
                }
              }
            }
            right: BinaryExpression {
              operator: '+'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 13
                  index: 148
                  line: 5
                }
                start: Object {
                  column: 8
                  index: 143
                  line: 5
                }
              }
              left: ReferenceIdentifier {
                name: 'T'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 9
                    index: 144
                    line: 5
                  }
                  start: Object {
                    column: 8
                    index: 143
                    line: 5
                  }
                }
              }
              right: ReferenceIdentifier {
                name: 'U'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 13
                    index: 148
                    line: 5
                  }
                  start: Object {
                    column: 12
                    index: 147
                    line: 5
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}